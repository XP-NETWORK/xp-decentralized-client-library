"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20Staking__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_stakingAmount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_ERC20Token",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "string",
                        name: "validatorAddress",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "chainType",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct ValidatorAddressAndChainType[]",
                name: "validatorAddressAndChainType",
                type: "tuple[]",
            },
        ],
        name: "Staked",
        type: "event",
    },
    {
        inputs: [],
        name: "ERC20Token",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "validatorAddress",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "chainType",
                        type: "string",
                    },
                ],
                internalType: "struct ValidatorAddressAndChainType[]",
                name: "_validatorAddressAndChainType",
                type: "tuple[]",
            },
        ],
        name: "stakeERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "stakingAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "stakingBalances",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60803461007e57601f61054538819003918201601f19168301916001600160401b0383118484101761008357808492604094855283398101031261007e5780516020909101516001600160a01b038116919082900361007e57600055600180546001600160a01b0319169190911790556040516104ab908161009a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816361b8b5dc1461036957508063739a3e021461034c5780637a80760e1461031f57637ca41e371461004f57600080fd5b3461031b57602090816003193601126103175780359267ffffffffffffffff928385116103135736602386011215610313578483013594602490858711610301578660051b958451976100a48589018a6103a1565b885283880190838298840101923684116102fd57848101925b84841061026e575050505050338752600282528287205461023457600193878360018060a01b0387541660648354885194859384926323b872dd60e01b84523389850152308a85015260448401525af1801561022a576101ef575b50875491338952600284528489209182549384018094116101de57505093929355855490835195848701928752848288015251809252606086019360608360051b880101959488915b84831061019257897ff6f745aefa7fce6b76ac5309c1cf0d4c5c42a9107f80667e6cc03d1f5a854bed8a8a038ba180f35b909192939484806101cd83999a605f198d82030187528b5190836101bd835189845289840190610435565b9201519084818403910152610435565b990193019301919594939290610161565b634e487b7160e01b8a526011905288fd5b8381813d8311610223575b61020481836103a1565b8101031261021f57518015150361021b5738610118565b8780fd5b8880fd5b503d6101fa565b85513d8b823e3d90fd5b915162461bcd60e51b81529283015260179082015276596f752063616e206f6e6c79207374616b65206f6e636560481b6044820152606490fd5b83358381116102f95782018860231982360301126102f957885191898301838110868211176102e7578a52878201358581116102e3576102b3908936918501016103d9565b83526044820135928584116102e3576102d48a94938a8695369201016103d9565b838201528152019301926100bd565b8e80fd5b634e487b7160e01b8f5260418c52888ffd5b8c80fd5b8a80fd5b50634e487b7160e01b87526041845286fd5b8580fd5b8380fd5b8280fd5b50503461034857816003193601126103485760015490516001600160a01b039091168152602090f35b5080fd5b505034610348578160031936011261034857602091549051908152f35b929190503461031757602036600319011261031757356001600160a01b03811690819003610317579260209381526002845220548152f35b90601f8019910116810190811067ffffffffffffffff8211176103c357604052565b634e487b7160e01b600052604160045260246000fd5b81601f820112156104305780359067ffffffffffffffff82116103c3576040519261040e601f8401601f1916602001856103a1565b8284526020838301011161043057816000926020809301838601378301015290565b600080fd5b919082519283825260005b848110610461575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161044056fea2646970667358221220f10466242afa3c5c91c18c742b1ec9138bd56f955d5f935992488d00df848c7d64736f6c63430008150033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20Staking__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_stakingAmount, _ERC20Token, overrides) {
        return super.getDeployTransaction(_stakingAmount, _ERC20Token, overrides || {});
    }
    deploy(_stakingAmount, _ERC20Token, overrides) {
        return super.deploy(_stakingAmount, _ERC20Token, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC20Staking__factory = ERC20Staking__factory;
ERC20Staking__factory.bytecode = _bytecode;
ERC20Staking__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRVJDMjBTdGFraW5nX19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbnRyYWN0c1R5cGVzL2V2bS9mYWN0b3JpZXMvY29udHJhY3RzL0VSQzIwU3Rha2luZ19fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtQ0FLZ0I7QUFjaEIsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsZ0JBQWdCO2dCQUN0QixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsYUFBYTtnQkFDbkIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0lBQ0Q7UUFDRSxTQUFTLEVBQUUsS0FBSztRQUNoQixNQUFNLEVBQUU7WUFDTjtnQkFDRSxPQUFPLEVBQUUsS0FBSztnQkFDZCxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxVQUFVLEVBQUU7b0JBQ1Y7d0JBQ0UsWUFBWSxFQUFFLFFBQVE7d0JBQ3RCLElBQUksRUFBRSxrQkFBa0I7d0JBQ3hCLElBQUksRUFBRSxRQUFRO3FCQUNmO29CQUNEO3dCQUNFLFlBQVksRUFBRSxRQUFRO3dCQUN0QixJQUFJLEVBQUUsV0FBVzt3QkFDakIsSUFBSSxFQUFFLFFBQVE7cUJBQ2Y7aUJBQ0Y7Z0JBQ0QsT0FBTyxFQUFFLEtBQUs7Z0JBQ2QsWUFBWSxFQUFFLHVDQUF1QztnQkFDckQsSUFBSSxFQUFFLDhCQUE4QjtnQkFDcEMsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxRQUFRO1FBQ2QsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsWUFBWTtRQUNsQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsaUJBQWlCO2dCQUMvQixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZQUFZLEVBQUUsUUFBUTt3QkFDdEIsSUFBSSxFQUFFLGtCQUFrQjt3QkFDeEIsSUFBSSxFQUFFLFFBQVE7cUJBQ2Y7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLFFBQVE7d0JBQ3RCLElBQUksRUFBRSxXQUFXO3dCQUNqQixJQUFJLEVBQUUsUUFBUTtxQkFDZjtpQkFDRjtnQkFDRCxZQUFZLEVBQUUsdUNBQXVDO2dCQUNyRCxJQUFJLEVBQUUsK0JBQStCO2dCQUNyQyxJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLFlBQVk7UUFDbEIsT0FBTyxFQUFFLEVBQUU7UUFDWCxlQUFlLEVBQUUsWUFBWTtRQUM3QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsZUFBZTtRQUNyQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxpQkFBaUI7UUFDdkIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtDQUNPLENBQUM7QUFFWCxNQUFNLFNBQVMsR0FDYiw4b0ZBQThvRixDQUFDO0FBTWpwRixNQUFNLFdBQVcsR0FBRyxDQUNsQixFQUFpQyxFQUNvQixFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFFeEUsTUFBYSxxQkFBc0IsU0FBUSx3QkFBZTtJQUN4RCxZQUFZLEdBQUcsSUFBbUM7UUFDaEQsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUN0QixLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUNqQixDQUFDO2FBQU0sQ0FBQztZQUNOLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xDLENBQUM7SUFDSCxDQUFDO0lBRVEsb0JBQW9CLENBQzNCLGNBQTRCLEVBQzVCLFdBQXdCLEVBQ3hCLFNBQW1EO1FBRW5ELE9BQU8sS0FBSyxDQUFDLG9CQUFvQixDQUMvQixjQUFjLEVBQ2QsV0FBVyxFQUNYLFNBQVMsSUFBSSxFQUFFLENBQ2hCLENBQUM7SUFDSixDQUFDO0lBQ1EsTUFBTSxDQUNiLGNBQTRCLEVBQzVCLFdBQXdCLEVBQ3hCLFNBQW1EO1FBRW5ELE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FDakIsY0FBYyxFQUNkLFdBQVcsRUFDWCxTQUFTLElBQUksRUFBRSxDQUtoQixDQUFDO0lBQ0osQ0FBQztJQUNRLE9BQU8sQ0FBQyxNQUE2QjtRQUM1QyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUEwQixDQUFDO0lBQ3hELENBQUM7SUFJRCxNQUFNLENBQUMsZUFBZTtRQUNwQixPQUFPLElBQUksa0JBQVMsQ0FBQyxJQUFJLENBQTBCLENBQUM7SUFDdEQsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPLENBQ1osT0FBZSxFQUNmLE1BQThCO1FBRTlCLE9BQU8sSUFBSSxpQkFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUE0QixDQUFDO0lBQ3hFLENBQUM7O0FBakRILHNEQWtEQztBQVhpQiw4QkFBUSxHQUFHLFNBQVMsQ0FBQztBQUNyQix5QkFBRyxHQUFHLElBQUksQ0FBQyJ9