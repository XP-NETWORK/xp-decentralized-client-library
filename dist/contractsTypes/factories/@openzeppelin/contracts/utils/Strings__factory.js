"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Strings__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'value',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'length',
                type: 'uint256',
            },
        ],
        name: 'StringsInsufficientHexLength',
        type: 'error',
    },
];
const _bytecode = '0x60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ebf559ecd869b22266b23fd850e8444de99e34bdb6fda0e725bd9ae986ba4b1264736f6c63430008150033';
const isSuperArgs = (xs) => xs.length > 1;
class Strings__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Strings__factory = Strings__factory;
Strings__factory.bytecode = _bytecode;
Strings__factory.abi = _abi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3RyaW5nc19fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb250cmFjdHNUeXBlcy9mYWN0b3JpZXMvQG9wZW56ZXBwZWxpbi9jb250cmFjdHMvdXRpbHMvU3RyaW5nc19fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUNwQixtQ0FLZ0I7QUFRaEIsTUFBTSxJQUFJLEdBQUc7SUFDVDtRQUNJLE1BQU0sRUFBRTtZQUNKO2dCQUNJLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsT0FBTztnQkFDYixJQUFJLEVBQUUsU0FBUzthQUNsQjtZQUNEO2dCQUNJLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsU0FBUzthQUNsQjtTQUNKO1FBQ0QsSUFBSSxFQUFFLDhCQUE4QjtRQUNwQyxJQUFJLEVBQUUsT0FBTztLQUNoQjtDQUNLLENBQUM7QUFFWCxNQUFNLFNBQVMsR0FDWCxrTEFBa0wsQ0FBQztBQU12TCxNQUFNLFdBQVcsR0FBRyxDQUNoQixFQUE0QixFQUN1QixFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7QUFFeEUsTUFBYSxnQkFBaUIsU0FBUSx3QkFBZTtJQUNqRCxZQUFZLEdBQUcsSUFBOEI7UUFDekMsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQztZQUNwQixLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUNuQixDQUFDO2FBQU0sQ0FBQztZQUNKLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BDLENBQUM7SUFDTCxDQUFDO0lBRVEsb0JBQW9CLENBQ3pCLFNBQW1EO1FBRW5ELE9BQU8sS0FBSyxDQUFDLG9CQUFvQixDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBQ1EsTUFBTSxDQUFDLFNBQW1EO1FBQy9ELE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLElBQUksRUFBRSxDQUlsQyxDQUFDO0lBQ04sQ0FBQztJQUNRLE9BQU8sQ0FBQyxNQUE2QjtRQUMxQyxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFxQixDQUFDO0lBQ3JELENBQUM7SUFJRCxNQUFNLENBQUMsZUFBZTtRQUNsQixPQUFPLElBQUksa0JBQVMsQ0FBQyxJQUFJLENBQXFCLENBQUM7SUFDbkQsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBZSxFQUFFLE1BQThCO1FBQzFELE9BQU8sSUFBSSxpQkFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUF1QixDQUFDO0lBQ3JFLENBQUM7O0FBaENMLDRDQWlDQztBQVJtQix5QkFBUSxHQUFHLFNBQVMsQ0FBQztBQUNyQixvQkFBRyxHQUFHLElBQUksQ0FBQyJ9