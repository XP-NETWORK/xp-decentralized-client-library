"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ABI = void 0;
const ABI = (address) => {
    return {
        address: address,
        name: "aptos_nft_bridge",
        friends: [],
        exposed_functions: [
            {
                name: "add_validator",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: ["vector<u8>", "vector<vector<u8>>", "vector<vector<u8>>"],
                return: [],
            },
            {
                name: "blacklist_validator",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: ["vector<u8>", "vector<vector<u8>>", "vector<vector<u8>>"],
                return: [],
            },
            {
                name: "claim_1155",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: [
                    "&signer",
                    "address",
                    "0x1::string::String",
                    "0x1::string::String",
                    "u64",
                    "address",
                    "u64",
                    "vector<vector<u8>>",
                    "vector<vector<u8>>",
                    "vector<u8>",
                    "vector<u8>",
                    "vector<u8>",
                    "u256",
                    "vector<u8>",
                    "vector<u8>",
                    "0x1::string::String",
                    "0x1::string::String",
                    "u64",
                ],
                return: [],
            },
            {
                name: "claim_721",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: [
                    "&signer",
                    "address",
                    "0x1::string::String",
                    "0x1::string::String",
                    "u64",
                    "address",
                    "u64",
                    "vector<vector<u8>>",
                    "vector<vector<u8>>",
                    "vector<u8>",
                    "vector<u8>",
                    "vector<u8>",
                    "u256",
                    "vector<u8>",
                    "vector<u8>",
                    "0x1::string::String",
                    "0x1::string::String",
                ],
                return: [],
            },
            {
                name: "claim_validator_rewards",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: ["signer", "address", "vector<u8>"],
                return: [],
            },
            {
                name: "has_validator",
                visibility: "public",
                is_entry: false,
                is_view: true,
                generic_type_params: [],
                params: ["vector<u8>"],
                return: ["bool"],
            },
            {
                name: "initialize",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: ["&signer", "vector<vector<u8>>", "vector<u8>", "vector<u8>"],
                return: [],
            },
            {
                name: "lock_1155",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: [
                    "&signer",
                    "address",
                    "vector<u8>",
                    "0x1::string::String",
                    "address",
                    "u64",
                    "0x1::string::String",
                ],
                return: [],
            },
            {
                name: "lock_721",
                visibility: "public",
                is_entry: true,
                is_view: false,
                generic_type_params: [],
                params: [
                    "&signer",
                    "address",
                    "vector<u8>",
                    "0x1::string::String",
                    "address",
                    "0x1::string::String",
                ],
                return: [],
            },
            {
                name: "owns_nft",
                visibility: "public",
                is_entry: false,
                is_view: true,
                generic_type_params: [],
                params: ["address", "0x1::string::String", "0x1::string::String"],
                return: ["bool"],
            },
            {
                name: "token_id_from_nonce_and_collection",
                visibility: "public",
                is_entry: false,
                is_view: true,
                generic_type_params: [],
                params: ["u256", "vector<u8>"],
                return: ["address"],
            },
            {
                name: "validator_count",
                visibility: "public",
                is_entry: false,
                is_view: true,
                generic_type_params: [],
                params: [],
                return: ["u64"],
            },
        ],
        structs: [
            {
                name: "AddNewValidatorEvent",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [{ name: "validator", type: "vector<u8>" }],
            },
            {
                name: "BlacklistValidatorEvent",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [{ name: "validator", type: "vector<u8>" }],
            },
            {
                name: "Bridge",
                is_native: false,
                is_event: false,
                abilities: ["key"],
                generic_type_params: [],
                fields: [
                    {
                        name: "validators",
                        type: "0x1::simple_map::SimpleMap<vector<u8>, 0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::Validator>",
                    },
                    { name: "signer_cap", type: "0x1::account::SignerCapability" },
                    {
                        name: "collection_objects",
                        type: "0x1::table::Table<0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::CollectionObject, u256>",
                    },
                    { name: "nfts_counter", type: "u64" },
                    {
                        name: "original_to_duplicate_mapping",
                        type: "0x1::table::Table<0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::OriginalToDuplicateKey, 0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::OriginalToDuplicateInfo>",
                    },
                    {
                        name: "duplicate_to_original_mapping",
                        type: "0x1::table::Table<0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::DuplicateToOriginalKey, 0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::DuplicateToOriginalInfo>",
                    },
                    {
                        name: "nft_collection_tokens",
                        type: "0x1::simple_map::SimpleMap<0x13f8d626e383e8621a89caeb05c56a95fda38aa2dddfa8c2b1ed063f0edb23c9::aptos_nft_bridge::CollectionNftObject, address>",
                    },
                    {
                        name: "nft_collections_counter",
                        type: "0x1::simple_map::SimpleMap<address, u256>",
                    },
                    { name: "self_chain", type: "vector<u8>" },
                    {
                        name: "blacklisted_validators",
                        type: "0x1::simple_map::SimpleMap<vector<u8>, bool>",
                    },
                ],
            },
            {
                name: "Claim1155Event",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "token_id", type: "u256" },
                    { name: "amount", type: "u64" },
                    { name: "transaction_hash", type: "vector<u8>" },
                    { name: "nft_contract", type: "vector<u8>" },
                ],
            },
            {
                name: "Claim721Event",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "token_id", type: "u256" },
                    { name: "transaction_hash", type: "vector<u8>" },
                    { name: "nft_contract", type: "vector<u8>" },
                ],
            },
            {
                name: "ClaimData",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop"],
                generic_type_params: [],
                fields: [
                    { name: "token_id", type: "u256" },
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "destination_chain", type: "vector<u8>" },
                    { name: "user", type: "address" },
                    { name: "source_nft_contract_address", type: "vector<u8>" },
                    { name: "name", type: "0x1::string::String" },
                    { name: "royalty_percentage", type: "u64" },
                    { name: "royalty_payee_address", type: "address" },
                    { name: "metadata", type: "0x1::string::String" },
                    { name: "transaction_hash", type: "vector<u8>" },
                    { name: "token_amount", type: "u256" },
                    { name: "nft_type", type: "vector<u8>" },
                    { name: "fee", type: "u64" },
                    { name: "symbol", type: "0x1::string::String" },
                ],
            },
            {
                name: "CollectionNftObject",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "collection_address", type: "vector<u8>" },
                    { name: "token_id", type: "u256" },
                ],
            },
            {
                name: "CollectionObject",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "collection", type: "address" },
                    { name: "object", type: "address" },
                ],
            },
            {
                name: "DuplicateToOriginalInfo",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "source_contract", type: "vector<u8>" },
                ],
            },
            {
                name: "DuplicateToOriginalKey",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "self_chain", type: "vector<u8>" },
                    { name: "collection_address", type: "vector<u8>" },
                ],
            },
            {
                name: "LockedEvent",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "token_id", type: "u256" },
                    { name: "destination_user_address", type: "0x1::string::String" },
                    { name: "token_amount", type: "u64" },
                    { name: "nft_type", type: "vector<u8>" },
                    { name: "destination_chain", type: "vector<u8>" },
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "collection_address", type: "vector<u8>" },
                    { name: "token_address", type: "address" },
                    { name: "metadata_uri", type: "0x1::string::String" },
                ],
            },
            {
                name: "OriginalToDuplicateInfo",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "self_chain", type: "vector<u8>" },
                    { name: "collection_address", type: "vector<u8>" },
                ],
            },
            {
                name: "OriginalToDuplicateKey",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "source_chain", type: "vector<u8>" },
                    { name: "source_contract", type: "vector<u8>" },
                ],
            },
            {
                name: "ProcessedClaims",
                is_native: false,
                is_event: false,
                abilities: ["key"],
                generic_type_params: [],
                fields: [{ name: "claims", type: "vector<vector<u8>>" }],
            },
            {
                name: "RewardValidatorEvent",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [{ name: "validator", type: "vector<u8>" }],
            },
            {
                name: "SignatureInfo",
                is_native: false,
                is_event: false,
                abilities: ["drop"],
                generic_type_params: [],
                fields: [
                    { name: "public_key", type: "vector<u8>" },
                    { name: "signature", type: "vector<u8>" },
                ],
            },
            {
                name: "UnLock1155Event",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "to", type: "address" },
                    { name: "token_id", type: "u256" },
                    { name: "amount", type: "u64" },
                ],
            },
            {
                name: "UnLock721Event",
                is_native: false,
                is_event: true,
                abilities: ["drop", "store"],
                generic_type_params: [],
                fields: [
                    { name: "to", type: "address" },
                    { name: "token_id", type: "u256" },
                ],
            },
            {
                name: "Validator",
                is_native: false,
                is_event: false,
                abilities: ["copy", "drop", "store"],
                generic_type_params: [],
                fields: [{ name: "pending_reward", type: "u64" }],
            },
        ],
    };
};
exports.ABI = ABI;
//# sourceMappingURL=data:application/json;base64,